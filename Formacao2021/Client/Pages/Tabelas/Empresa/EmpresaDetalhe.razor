@page "/empresas/detalhe"
@page "/empresas/detalhe/{Id:guid}"

@inject Sotsera.Blazor.Toaster.IToaster Toaster
@inject NavigationManager uri
@inject HttpClient client
@inject IJSRuntime js

<AuthorizeView Context="authContext">
    <Authorized>
        <Container Fluid="true">
            <Row>
                <Breadcrumb Mode="BreadcrumbMode.Auto">
                    <BreadcrumbItem>
                        <BreadcrumbLink To="">Início</BreadcrumbLink>
                    </BreadcrumbItem>
                    <BreadcrumbItem>
                        <BreadcrumbLink To="#">Tabelas</BreadcrumbLink>
                    </BreadcrumbItem>
                    <BreadcrumbItem>
                        <BreadcrumbLink To="empresas">Empresas</BreadcrumbLink>
                    </BreadcrumbItem>
                    <BreadcrumbItem>
                        <BreadcrumbLink To="@($"empresas/detalhe/{Id}")">Detalhe</BreadcrumbLink>
                    </BreadcrumbItem>
                </Breadcrumb>
            </Row>
            <Row>
                <Column ColumnSize="ColumnSize.Is6.OnDesktop.Is12.OnMobile">
                    <SpinLoader IsLoading="@(empresa == null)">
                        <LoadingTemplate>
                            <div class="modal-overlay">
                                <Chase Color="#ff0000" Size="60px" Center="true" />
                            </div>
                        </LoadingTemplate>
                        <ContentTemplate>
                            <Card>
                                <CardBody>

                                    <CardTitle Size="5">@empresa.Nome</CardTitle>
                                    <CardText>
                                        <p><strong>Morada:   </strong>@empresa.Morada</p>
                                        <p>
                                            <strong>Cod. postal:   </strong>@empresa.CodPostal&nbsp;&nbsp;&nbsp;&nbsp;
                                            <strong>Localidade:   </strong>@empresa.Localidade
                                        </p>
                                        <Divider />
                                        <p><strong>Contacto:   </strong>@empresa.Contato</p>
                                        <p>
                                            <strong>Telefone:   </strong>@empresa.Telefone&nbsp;&nbsp;&nbsp;&nbsp;
                                            <strong>email:   </strong>@empresa.Email
                                        </p>
                                        <Divider />
                                        <p><strong>Grupo:   </strong>@empresa.GrupoID</p>
                                    </CardText>
                                </CardBody>
                                <CardFooter>
                                    <Tooltip Text="Editar Empresa">
                                        <Button Color="Color.Info" Clicked="@(() => PrepareForEdit())"
                                                data-toggle="modal" data-target="#empresaModal">
                                            <Icon Name="IconName.Edit" /> Editar
                                        </Button>
                                    </Tooltip>
                                    <Tooltip Text="Apagar Empresa">
                                        <Button Color="Color.Danger" Clicked="@(() => PrepareForDelete())"
                                                data-toggle="modal" data-target="#confirmDeleteModal">
                                            <Icon Name="IconName.Delete" /> Apagar
                                        </Button>
                                    </Tooltip>
                                    <Tooltip Text="Voltar">
                                        <Button Color="Color.Warning" Clicked="@(() => Back())">
                                            <Icon Name="IconName.StepBackward" /> Voltar
                                        </Button>
                                    </Tooltip>
                                </CardFooter>
                            </Card>
                        </ContentTemplate>
                        <FaultedContentTemplate>
                            <text>ERRO!</text>
                        </FaultedContentTemplate>
                    </SpinLoader>
                </Column>
            </Row>
        </Container>

        <ConfirmDialog OnClick="@Delete">
            <ConfirmText>
                <p>Deseja de apagar a empresa @itemToDelete ?</p>
                <p>Não será possível recuperar este registo!</p>
            </ConfirmText>
        </ConfirmDialog>
        <EmpresaModal Model=Model DataChanged="@DataChanged">
            <CustomHeader>@customHeader</CustomHeader>
        </EmpresaModal>

    </Authorized>
    <NotAuthorized>
        <p>Não está logado.</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    Empresa empresa;
    Empresa Model = new Empresa();
    [Parameter] public Guid Id { get; set; }
    string itemToDelete = string.Empty;
    string customHeader = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        empresa = await client.GetFromJsonAsync<Empresa>($"api/empresa/{Id}");
    }
    private async void DataChanged()
    {
        await OnInitializedAsync();
        StateHasChanged();
    }

    private void PrepareForEdit()
    {
        customHeader = "Editar Empresa";
        Model = empresa;
    }

    private void PrepareForDelete()
    {
        itemToDelete = empresa.Nome;
    }

    async Task Delete()
    {
        await client.DeleteAsync($"api/empresa/{Id}");
        await js.InvokeAsync<object>("global.closeModal", "confirmDeleteModal");
        uri.NavigateTo("/empresas/deleted");
    }

    private async Task Back()
    {
        await js.InvokeAsync<string>("history.back", false);
    }
}